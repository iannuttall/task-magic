---
description: This rule explains how the agent should use the memory system to find context of the project
globs:
alwaysApply: false
---
# AI Memory System

Whenever you use this rule, start your message with the following:

"Checking Task Magic memory..."

This project utilizes a memory system based on hashtags to store a history of completed, failed, or superseded work, providing valuable context for ongoing development. Files are archived by adding the `#memory` tag to their existing tags.

## Structure

The memory system consists of:

### Task Archive

- **Archived Tasks**: Task files with both `#task #memory` tags (e.g., `task{id}_name.md`). These files retain the original details, descriptions, and test strategies defined when the task was active, with the addition of the `#memory` tag.
- **`TASKS_LOG.md`**: An append-only Markdown file with `#task #log #memory` tags that serves as a chronological log of when tasks were archived. Each entry summarizes the archived task, including its ID, Title, final Status, Dependencies, and the Description extracted from the task file at the time of archival.

### Plan Archive

- **Archived Plans**: Plan files with both `#plan #memory` tags (both global `PLAN.md` versions and feature plans like `{feature}-plan.md`). Plans might be archived when they are completed (all associated features are implemented and stable), deprecated (the feature or project direction is abandoned), or superseded by a newer version of the plan.
- **`PLANS_LOG.md`**: An append-only Markdown file with `#plan #log #memory` tags that serves as a chronological log of when plans were archived. Each entry should summarize the archived plan, including its filename, a version or date stamp, the reason for archival (e.g., Completed, Deprecated, Superseded), and a brief description or title of the plan.
	- **Log Entry Format Example for PLANS_LOG.md:**
		```markdown
		- **Archived Plan:** `old-feature-plan.md`
			- **Archived On:** YYYY-MM-DD HH:MM:SS
			- **Reason:** Deprecated
			- **Title:** PRD: Old Feature
		```

## File Management

When working with the memory system, the agent should follow these practices:

1. **Finding Archived Files:**
	- To find archived tasks: Use file search tool for `#task.*#memory` pattern
	- To find archived plans: Use file search tool for `#plan.*#memory` pattern
	- To find log files: Use file search tool for `#log.*#memory` pattern

2. **Check Files Before Operations:** Before operating on files like `TASKS_LOG.md` or `PLANS_LOG.md`, use the `file_search` tool to check for their existence.

3. **Safe File Creation/Modification:** If a log file doesn't exist (as determined by `file_search`), create it with initial content and appropriate tags:
	- `TASKS_LOG.md`: Create with `# Task Archive Log\n\n#task #log #memory`
	- `PLANS_LOG.md`: Create with `# Plan Archive Log\n\n#plan #log #memory`
	- To append to an existing file, first use `read_file` to get its current content, then append the new data, and use `edit_file` to write it back.

4. **Archiving Files:** To archive a file, simply add the `#memory` tag to its existing tags at the end of the file using `edit_file`. No file movement is required.

## Purpose and Usage

The memory system serves as the project's historical record of development activity and planning managed by the AI task system. When referencing other files (e.g., other tasks, plans, or related documents) within the notes or descriptive content of archived Markdown files, or in the descriptions within log files (`TASKS_LOG.md`, `PLANS_LOG.md`), prefer using wikilink syntax without paths (e.g., `[[filename]]` or `[[filename|display text]]`) for clarity and potential future tool integration. For instance, a link to an archived plan might look like `[[old-feature-plan]]`.

**When to Consult Memory:**

- **Understanding Past Implementations & Plans:** Before starting a new task or planning a new feature, consult the memory (log files and archived files with `#memory` tag) to understand how similar or dependent features were built and planned.
- **Avoiding Redundancy:** Check if a similar task, requirement, or plan has been addressed previously.
- **Planning Related Features:** Review past tasks and plans for a feature to inform the planning and task breakdown of new, related features.
- **Investigating Failed Tasks:** If a task failed previously, reviewing its archived file (including the `error_log` in the YAML) can provide context.
- **Historical Context of Decisions:** Archived plans provide a snapshot of the project's goals, requirements, and intended direction at a particular point in time.

**How to Consult Memory:**

1. **Start with the Logs:** Read `TASKS_LOG.md` and `PLANS_LOG.md` (files with `#log #memory` tags) to get a chronological overview of archived items. Identify potentially relevant tasks or plans based on their titles, descriptions, and reasons for archival.
2. **Dive into Archived Files:** If a log entry suggests an item is highly relevant, use file search to find the specific archived file (with `#memory` tag) to get the complete details.

By leveraging this historical context, the AI can make more informed decisions, maintain consistency, and work more efficiently on the project.
